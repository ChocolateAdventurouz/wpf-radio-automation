<syncfusion:ChromelessWindow x:Class="RA.UI.Playout.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RA.UI.Playout"
        xmlns:localcontrols="clr-namespace:RA.UI.Playout.Views.Components"
        xmlns:controls="clr-namespace:RA.UI.Core.UserControls;assembly=RA.UI.Core"
        xmlns:converters="clr-namespace:RA.UI.Core;assembly=RA.UI.Core"
        xmlns:vm="clr-namespace:RA.UI.Playout.ViewModels"
        xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
        xmlns:syncfusionskin ="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF"
        syncfusionskin:SfSkinManager.Theme="{syncfusionskin:SkinManagerExtension ThemeName=Windows11Dark}"
        mc:Ignorable="d" Icon="pack://application:,,,/RA.UI.Playout;component/Resources/playout_icon.png"
        d:DataContext="{d:DesignInstance Type=vm:MainViewModel}"
        Title="Radio Automation - Playout" MinHeight="700" MinWidth="1400" CornerRadius="0">
    <Window.Resources>
        <converters:BooleanToVisibileVisibilityConverter x:Key="BooleanToVisibileVisibilityConverter"/>
        <Style x:Key="DarkToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" 
                            Background="#202020" 
                            BorderBrush="#404040" 
                            BorderThickness="1" 
                            CornerRadius="0">
                            <ContentPresenter x:Name="contentPresenter" 
                                          Content="{TemplateBinding Content}" 
                                          ContentTemplate="{TemplateBinding ContentTemplate}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#303030"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="Green"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DarkButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" 
                            Background="#202020" 
                            BorderBrush="#404040" 
                            BorderThickness="1" 
                            CornerRadius="3">
                            <ContentPresenter x:Name="contentPresenter" 
                                          Content="{TemplateBinding Content}" 
                                          ContentTemplate="{TemplateBinding ContentTemplate}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#303030"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="Green"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--<Style x:Key="MediaButtonStyle">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#3A3A3A"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="5,0,0,5"/>
        </Style>-->
    </Window.Resources>
    <Grid Background="#1A1A1A">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Border Grid.Row="0" Background="#222" Padding="10" Height="100">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>


                <!-- Column 1 : Current playing details -->
                <localcontrols:NowPlayingView Grid.Column="0"
                                              DataContext="{Binding NowPlayingVm}"/>

                <Grid Grid.Column="1" Margin="10,0,10,0" VerticalAlignment="Center" Height="120">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <syncfusion:ButtonAdv Grid.Column="0" SizeMode="Large" Margin="0,0,5,0" Width="60" IconStretch="Fill">
                        <syncfusion:ButtonAdv.Style>
                            <Style TargetType="syncfusion:ButtonAdv" BasedOn="{StaticResource {x:Type syncfusion:ButtonAdv}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding NowPlayingVm.IsItemLoaded}" Value="False">
                                        <Setter Property="Label" Value="Play"/>
                                        <Setter Property="LargeIcon" Value="{StaticResource PlayIcon}"/>
                                        <Setter Property="Command" Value="{Binding PlaylistVm.PlayCommand}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding NowPlayingVm.IsItemLoaded}" Value="True">
                                        <Setter Property="Label" Value="Pause"/>
                                        <Setter Property="LargeIcon" Value="{StaticResource PauseIcon}"/>
                                        <Setter Property="Command" Value="{Binding PlaylistVm.PauseCommand}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding NowPlayingVm.IsPaused}" Value="True">
                                        <Setter Property="Label" Value="Resume"/>
                                        <Setter Property="LargeIcon" Value="{StaticResource ResumeIcon}"/>
                                        <Setter Property="Command" Value="{Binding PlaylistVm.ResumeCommand}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </syncfusion:ButtonAdv.Style>
                    </syncfusion:ButtonAdv>

                    <syncfusion:ButtonAdv Grid.Column="1" SizeMode="Large" Label="Stop" Margin="0,0,5,0" Width="60"
                                          LargeIcon="{StaticResource StopIcon}" IconStretch="None"
                                          Command="{Binding PlaylistVm.StopCommand}"/>
                    <syncfusion:ButtonAdv Grid.Column="2" SizeMode="Large" Label="Loop" Margin="0,0,5,0" Width="60" IsCheckable="True"
                                          IsChecked="{Binding PlaylistVm.IsLooping}"
                                          LargeIcon="{StaticResource LoopIcon}" IconStretch="None"/>
                </Grid>

                <!-- Column 2 : Time -->
                <localcontrols:CurrentTimeView Grid.Column="2"/>
            </Grid>
        </Border>
         
        <!-- Main Content -->
        <Grid Grid.Row="1" Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="700"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*" MinWidth="700"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="120"/>
                </Grid.ColumnDefinitions>

                <localcontrols:PlaylistView Grid.Column="0"
                                        DataContext="{Binding PlaylistVm}"/>

                <!-- System Buttons -->
                <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid.Resources>
                    <Style TargetType="ToggleButton" BasedOn="{StaticResource DarkToggleButton}">
                        <Setter Property="Height" Value="90"/>
                    </Style>
                    <Style TargetType="Button" BasedOn="{StaticResource DarkButton}">
                        <Setter Property="Height" Value="90"/>
                    </Style>
                </Grid.Resources>
                <ToggleButton Content="AUTO PLAY" Grid.Row="0"
                              IsChecked="{Binding PlaylistVm.IsAutoPlayOn}"
                       />
                <ToggleButton Content="AUTO RELOAD" Grid.Row="1"
                              IsChecked="{Binding PlaylistVm.IsAutoReloadOn}"/>
                <Button Content="RELOAD" Grid.Row="2"
                        Command="{Binding PlaylistVm.ReloadCommand}"/>
                <Button Content="CLEAR" Grid.Row="3"
                        Command="{Binding PlaylistVm.ClearCommand}"/>
                <Button Content="INSERT" Grid.Row="4"/>
                <Button Content="REPLACE" Grid.Row="5"/>
            </Grid>
            </Grid>
            
            
    
            <localcontrols:MediaItemsView Grid.Column="2" Margin="5,0,0,0"
                                          DataContext="{Binding MediaItemsVm}"/>

            <syncfusion:SfGridSplitter
                Grid.Column="1" Margin="3,-10,0.5,-10"
                Width="5"
                EnableCollapseButton="False"
                ResizeBehavior="PreviousAndNext"
                ShowsPreview="False" />

        </Grid>
    </Grid>
</syncfusion:ChromelessWindow>
